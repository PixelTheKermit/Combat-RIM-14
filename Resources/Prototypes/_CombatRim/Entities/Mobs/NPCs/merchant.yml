- type: entity
  name: Merchant
  id: MerchantBase
  components:
  - type: Faction
    factions:
    - SimpleNeutral
  - type: Physics
    bodyType: KinematicController # Same for all inheritors
  - type: Fixtures
    fixtures:
    - shape:
        # Circles, cuz rotation of rectangles looks very bad
        !type:PhysShapeCircle
        radius: 0.35
      density: 50
      mask:
      - MobMask
      layer:
      - MobLayer
  - type: Damageable
  - type: Sprite
    drawdepth: Mobs
    netsync: false
    sprite: Mobs/Silicon/Bots/merchantbot.rsi
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: base
  - type: Clickable
  - type: InteractionOutline
  - type: MobThresholds
    thresholds:
      0: Alive
  - type: DamageStateVisuals
    states:
      Alive:
        Base: base
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 150
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel:
            min: 1
            max: 3
      - !type:DoActsBehavior
        acts: ["Destruction"]
  - type: Speech

- type: entity
  name: Buyer Merchant
  description: A merchant that buys stuff from you
  id: PurchasingMerchant
  parent: MerchantBase
  components:
  - type: MerchantSell
    cashPrototype: SpaceCash
    blacklist:
    - SellMerchantBlacklist

- type: entity
  name: Botanist Merchant
  description: A merchant of simple crops and simple tools
  id: BotanistMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: botanist
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetBotanical
    balance:
      SpaceCash: 0

- type: entity
  name: Firearm Merchant
  description: A merchant of certain, reliable guns
  id: FirearmMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: security
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetGuns
    balance:
      SpaceCash: 0

- type: entity
  name: Swords n stuff Merchant
  description: A merchant that sells anything from blunt to sharp
  id: MeleeMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: securityblue
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetMelee
    balance:
      SpaceCash: 0

- type: entity
  name: Armored Merchant
  description: A merchant that appeals to the paranoid
  id: ArmorMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: scaf
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetArmor
    balance:
      SpaceCash: 0


- type: entity
  name: Demoman Merchant
  description: What makes me a good merchant? If I were a bad merchant, I wouldn't be sitting here, discussing it with you now would I?
  id: DemomanMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: demoman
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetGrenades
    balance:
      SpaceCash: 0

- type: entity
  name: Turret Ammo Merchant
  description: A merchant that provides ammo for your ship's guns
  id: TurretAmmoMerchant
  parent: MerchantBase
  components:
  - type: Sprite
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: pirate
  - type: UserInterface
    interfaces:
    - key: enum.StoreUiKey.Key
      type: StoreBoundUserInterface
  - type: ActivatableUI
    key: enum.StoreUiKey.Key
  - type: Store
    preset: MerchantPresetShipAmmo
    balance:
      SpaceCash: 0